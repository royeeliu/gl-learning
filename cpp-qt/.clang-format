Language: Cpp
BasedOnStyle:	Microsoft
ColumnLimit: 120
IncludeCategories:
  - Regex:           '^["<](stdafx|pch|framework)\.h[">]$'
    Priority:        -1
  - Regex:           '^<Windows\.h>$'
    Priority:        3
  - Regex:           '^<(WinIoCtl|winhttp|Shellapi)\.h>$'
    Priority:        4
  - Regex:           '.*'
    Priority:        2

# 指针和引用的对齐: Left, Right, Middle
PointerAlignment:	Left

# 缩进宽度
IndentWidth:	4

# 访问说明符(public、private等)的偏移
AccessModifierOffset:	-4

# 缩进case标签
IndentCaseLabels:	false

# 自动添加命名空间结束注释（已知 VS 实际上不会自动添加，但是如果已有注释会修正）
FixNamespaceComments: true

# 在大括号前换行: Attach(始终将大括号附加到周围的上下文), Linux(除函数、命名空间和类定义，与Attach类似), 
#   Mozilla(除枚举、函数、记录定义，与Attach类似), Stroustrup(除函数定义、catch、else，与Attach类似), 
#   Allman(总是在大括号前换行), GNU(总是在大括号前换行，并对于控制语句的大括号增加额外的缩进), WebKit(在函数前换行), Custom
#   注：这里认为语句块也属于函数
BreakBeforeBraces:	Custom

# 大括号换行，只有当BreakBeforeBraces设置为Custom时才有效
BraceWrapping:
  # class定义后面
  AfterClass:	true
  # 控制语句后面
  AfterControlStatement:	true
  # enum定义后面
  AfterEnum:	true
  # 函数定义后面
  AfterFunction:	true
  # 命名空间定义后面
  AfterNamespace:	false
  # ObjC定义后面
  #AfterObjCDeclaration:	false
  # struct定义后面
  AfterStruct:	true
  # union定义后面
  AfterUnion:	true
  # catch之前
  BeforeCatch:	true
  # else之前
  BeforeElse:	true
  # 缩进大括号
  IndentBraces:	false

# 允许短的函数放在同一行: None, InlineOnly(定义在类中), Empty(空函数), Inline(定义在类中，空函数), All
AllowShortFunctionsOnASingleLine:	Empty

# 初始化列表换行方式（BeforeColon 不起作用，BeforeComma 对冒号也有作用）
BreakConstructorInitializers: BeforeComma

# 继承的换行方式（BeforeColon 不起作用，BeforeComma 对冒号也有作用）
BreakInheritanceList: BeforeComma

# 总是在template声明后换行
AlwaysBreakTemplateDeclarations:	true